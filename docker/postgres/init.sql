-- Tabela de usuários
CREATE TABLE tbl_app_user
(
    id            SERIAL PRIMARY KEY,
    username      VARCHAR(50) UNIQUE  NOT NULL,
    email         VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255)        NOT NULL,
    created_at    TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Tabela principal de transações
CREATE TABLE tbl_transaction
(
    id                 SERIAL PRIMARY KEY,
    description        VARCHAR(255)   NOT NULL,
    amount             DECIMAL(10, 2) NOT NULL CHECK (amount > 0),
    type               VARCHAR(10)    NOT NULL CHECK (type IN ('EXPENSE', 'INCOME')),
    category_id        INTEGER        NOT NULL REFERENCES tbl_category (id),
    transaction_date   DATE           NOT NULL,
    created_at         TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    notes              TEXT,
    recurrence_pattern VARCHAR(20),                                         -- 'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'
    installment_info   JSONB,
    user_id            INTEGER        NOT NULL REFERENCES tbl_app_user (id) -- Adicionado relacionamento com usuário
);

-- Tabela de categorias
CREATE TABLE tbl_category
(
    id        SERIAL PRIMARY KEY,
    name      VARCHAR(50) NOT NULL UNIQUE,
    type      VARCHAR(10) NOT NULL CHECK (type IN ('EXPENSE', 'INCOME')),
    icon      VARCHAR(50),
    color     VARCHAR(7),
    parent_id INTEGER REFERENCES tbl_category (id) -- Auto-relacionamento para hierarquia
);

-- Tabela de orçamentos
CREATE TABLE tbl_budget
(
    id           SERIAL PRIMARY KEY,
    user_id      INTEGER        NOT NULL REFERENCES tbl_app_user (id),
    category_id  INTEGER REFERENCES tbl_category (id),
    amount       DECIMAL(10, 2) NOT NULL,
    budget_month DATE           NOT NULL,
    created_at   TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de contas bancárias
CREATE TABLE tbl_account
(
    account_id              INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    account_name            VARCHAR(100)                             NOT NULL,
    account_initial_balance DECIMAL(10, 2)                           NOT NULL,
    user_id                 INTEGER                                  NOT NULL,
    CONSTRAINT pk_tbl_account PRIMARY KEY (account_id)
);

ALTER TABLE tbl_account
    ADD CONSTRAINT FK_TBL_ACCOUNT_ON_USER FOREIGN KEY (user_id) REFERENCES tbl_app_user (id);

-- Índices para otimização
CREATE INDEX idx_transaction_user_date ON tbl_transaction (user_id, transaction_date);
CREATE INDEX idx_transaction_category ON tbl_transaction (category_id);
CREATE INDEX idx_transaction_installment ON tbl_transaction USING GIN (installment_info);
CREATE INDEX idx_category_type ON tbl_category (type);
CREATE INDEX idx_budget_user_month ON tbl_budget (user_id, month);
create index idx_account_on_user
    on tbl_account (user_id);
