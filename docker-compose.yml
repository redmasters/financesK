version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: financesK-postgres
    environment:
      POSTGRES_DB: financesk_db
      POSTGRES_USER: financesk_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: "America/Sao_Paulo"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U financesk_admin -d financesk_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação Spring Boot
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financesK-app
    environment:
      TZ: "America/Sao_Paulo"
      PROFILE: ${PROFILE}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/financesk_db
      SPRING_DATASOURCE_USERNAME: financesk_admin
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      APP_BASE_URL: ${APP_BASE_URL}
      # Email Configuration
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      # JWT Configuration
      SECRET_KEY: ${SECRET_KEY}
      # Configuração do diretório de uploads
      APP_UPLOAD_DIR: /app/uploads
      APP_MAX_FILE_SIZE: 10MB
      APP_MAX_REQUEST_SIZE: 10MB
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network
    volumes:
      # Volume para armazenagem de arquivos (fotos, documentos, etc.)
      - app_files:/app/uploads
      # Volume para logs da aplicação (opcional)
      - app_logs:/app/logs
    restart: unless-stopped

volumes:
  # Volume para dados do PostgreSQL
  postgres_data:
    driver: local

  # Volume para arquivos da aplicação (fotos de perfil, documentos, anexos, etc.)
  app_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/uploads

  # Volume para logs da aplicação
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs

networks:
  microservices-network:
    driver: bridge
